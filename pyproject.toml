[tool.poetry]
name = "tap-veeqo"
version = "0.1.0"
description = "`tap-veeqo` is a Singer tap for Veeqo, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["Reuben Frankel <rfrankel@matatika.com>"]
keywords = [
    "ELT",
    "Veeqo",
]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = "Apache 2.0"
packages = [
    { include = "tap_veeqo" },
]

[tool.poetry.dependencies]
python = "^3.8"
importlib-resources = { version = "==6.1.*", python = "<3.9" }
singer-sdk = "^0.36.0"
fs-s3fs = { version = "^1.1.1", optional = true }
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
singer-sdk = { version="^0.36.0", extras = ["testing"] }

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.mypy]
python_version = "3.11"
warn_unused_configs = true

[tool.ruff]
src = ["tap_veeqo"]
target-version = "py38"

[tool.ruff.lint]
ignore = [
    "ANN001",  # missing-type-function-argument
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "ANN201",  # missing-return-type-undocumented-public-function
    "ANN202",  # missing-return-type-private-function
    "COM812",  # missing-trailing-comma
    "ISC001",  # single-line-implicit-string-concatenation
]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tap_veeqo/schemas/**/*" = [
    "D101",   # undocumented-public-class
    "N805",   # invalid-first-argument-name-for-method
]

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.isort]
known-first-party = ["tap_veeqo"]

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core==1.8.1"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
tap-veeqo = 'tap_veeqo.tap:TapVeeqo.cli'
